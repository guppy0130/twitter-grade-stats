{{#> base}} {{#* inline "styles"}}
<style>
    body {
        width: 90vw;
        margin: 0 auto;
    }

    td, th {
        border-bottom: 1px solid gray;
        padding: 12px 15px;
    }

    table {
        margin-top: 1em;
        border-collapse: collapse;
    }

    .table-grade-entry {
        text-align: right;
    }

    #user-graph-container {
        min-height: 300px;
    }

    @media screen and (min-width: 60em) {
        body {
            width: 50vw;
        }
    }

    button {
        background-color: white;
        border: 2px solid rgba(54, 162, 235, 1);
        border-radius: 4px;
        cursor: pointer;
        text-transform: uppercase;
        transition: 0.2s;
        padding: 0.6em;
        width: 100%;
        font-size: 1em;
        font-family: 'Sunflower', sans-serif;
    }

    button:hover {
        background-color: rgba(54, 162, 235, 1);
        color: white;
    }
</style>
{{/inline}} {{#* inline "content"}}
<article>
    <h1>{{title}}</h1>

    <div id="user-graph-container">
        <canvas id="user-graph"></canvas>
    </div>

    <h2>Some Quick Stats</h2>
    <p>The sample included {{{stats.count}}} tweets. These grade levels varied between {{{stats.min}}} and {{{stats.max}}}. These numbers may be negative as a result of several factors:</p>
    <ul>
        <li>The formula itself</li>
        <li>The cleaning process applied</li>
    </ul>
    <p>Nevertheless, these negative levels were taken into account for the following calculations.

    The average grade level was around {{{round stats.sampMean}}}, with a measured sample standard deviation of about {{{round stats.sampStdDev}}}.
    </p>

    <h2>Testing</h2>
    <p>So, are these tweets written "better" than a fifth grader's?</p>
    <p id="fifth-grade-boolean"></p>

    <p>The population consists of {{{title}}}. The parameter of interest is the mean Flesch-Kincaid grade level of these tweets.</p>
    <p>The null hypothesis claims that the mean grade level is 5. The alternative hypothesis claims that the mean grade level is greater than 5.</p>
    <p>The confidence level is 95%; the alpha value, 0.05. If the value obtained at the end yields a value less than 0.05, the result is statistically significant; that is, the null hypothesis is rejected because the data is too extreme. If it is greater than 0.05, the null hypothesis cannot be rejected, so it <em>could</em> be that the null hypothesis is true.</p>

    <h2>Important Notes</h2>
    <ul>
        <li>The cleaning process removes user mentions (e.g., @yanglangthang), URLs, hashtags, and newlines. These elements do not represent vocabulary and were thus irrelevant.</li>
        <li>The value used was the Flesch-Kincaid Grade Level. You can find more information on the test, as well as its issues and uses, on <a href="https://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests#Flesch.E2.80.93Kincaid_grade_level">Wikipedia</a>.</li>
        <li>Implementation of the Flesch-Kincaid calculator was provided by <a href="https://www.npmjs.com/package/text-statistics">the npm package text-statistics</a>.</li>
        <li>Statistics methods are implemented with <a href="https://github.com/jstat/jstat">jstat, the JavaScript Statistical Library</a>.</li>
    </ul>

    <button id="tweet-table-toggle" onclick="toggleTweetTable()">View Tweets Used</button>
    <table id="tweet-table">
        <tr>
            <th>Tweet</th>
            <th>Grade</th>
        </tr>
        {{#each tweets}}
        <tr>
            <td>{{text}}</td>
            <td class="table-grade-entry">{{grade}}</td>
        </tr>
        {{/each}}
    </table>

    <p><a href="/about">Learn more about this project.</a></p>
</article>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js" integrity="sha256-CfcERD4Ov4+lKbWbYqXD6aFM9M51gN4GUEtDhkWABMo=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstat/1.7.1/jstat.min.js" integrity="sha256-Rtwg0oi/KB80JyxnJGWz/zWwjIBgDchFFBnenkosAfA=" crossorigin="anonymous"></script>
<script>
    /* GRAPH STUFF */
    var min = {{{stats.min}}},
        max = {{{stats.max}}},
        sampMean = {{{stats.sampMean}}},
        sampStdDev = {{{stats.sampStdDev}}},
        count = {{{stats.count}}},
        data = {{{stats.bins}}},
        ideal = {{{stats.ideal}}};

    /*
     * takes an object of format `{bin: count}` and deconstructs it to
     * sortedBins, an array of bins in sorted order, and
     * sortedCounts, an array of counts in sorted order
     */

    function sortAndFlatten(object) {
        var sortedCounts = [],
            sortedBins = [];
        sortedBins = Object.keys(object).sort(function(a, b) {
            return a - b;
        });
        sortedBins.forEach(function(item) {
            sortedCounts.push(object[item]);
        });
        return [sortedBins, sortedCounts];
    }

    var [dataBins, dataBinCounts] = sortAndFlatten(data);
    var [idealBins, idealBinCounts] = sortAndFlatten(ideal);

    var userChartData = {
        labels: dataBins,
        datasets: [{
                type: 'line',
                label: 'Normal Dist Based on Sample Stats',
                data: idealBinCounts,
                backgroundColor: 'rgba(255, 99, 132, 0.4)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            },
            {
                type: 'bar',
                label: 'Raw Tweets (' + count + ')',
                data: dataBinCounts,
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }
        ]
    }

    var userChartOptions = {
        title: {
            display: true,
            text: "Raw Tweets' Grade Levels"
        },
        tooltips: {
            mode: 'index'
        },
        scales: {
            xAxes: [{
                scaleLabel: {
                    display: true,
                    labelString: 'Grade Level'
                }
            }],
            yAxes: [{
                scaleLabel: {
                    display: true,
                    labelString: '# of Tweets'
                }
            }]
        },
        maintainAspectRatio: false
    }

    var ctx = document.getElementById('user-graph').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'bar',
        data: userChartData,
        options: userChartOptions
    });

    /* DISPLAY STUFF */
    function toggleTweetTable() {
        var tweetTable = document.getElementById('tweet-table').style.display;
        if (tweetTable == '' || tweetTable == 'table') {
            document.getElementById('tweet-table').style.display = 'none';
            document.getElementById('tweet-table-toggle').innerText = 'View Tweets Used';
        } else {
            document.getElementById('tweet-table').style.display = 'table';
            document.getElementById('tweet-table-toggle').innerText = 'Hide Tweets Used';
        }
    }
    // show by default, then hide because it's kinda big
    toggleTweetTable();

    // we compare against grade with 100-alpha confidence
    var grade = 5,
        alpha = 0.05;

    /* MATH HELPER FUNCTIONS */
    function calculateT(x, mu, s, n) {
        return (x - mu) / (s / Math.sqrt(n));
    }

    // taken from jstat library
    function gammaln(x) {
        var j = 0;
        var cof = [76.18009172947146, -86.50532032941677, 24.01409824083091, -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5];
        var ser = 1.000000000190015;
        var xx, y, tmp;
        tmp = (y = xx = x) + 5.5;
        tmp -= (xx + 0.5) * Math.log(tmp);
        for (; j < 6; j++) {
            ser += cof[j] / ++y;
        }
        return Math.log(2.5066282746310005 * ser / xx) - tmp;
    }

    function betacf(x, a, b) {
        var fpmin = 1e-30;
        var m = 1;
        var qab = a + b;
        var qap = a + 1;
        var qam = a - 1;
        var c = 1;
        var d = 1 - qab * x / qap;
        var m2, aa, del, h;

        if (Math.abs(d) < fpmin) {
            d = fpmin;
        }
        d = 1 / d;
        h = d;

        for (; m <= 100; m++) {
            m2 = 2 * m;
            aa = m * (b - m) * x / ((qam + m2) * (a + m2));
            d = 1 + aa * d;
            if (Math.abs(d) < fpmin) {
                d = fpmin;
            }
            c = 1 + aa / c;
            if (Math.abs(c) < fpmin) {
                c = fpmin;
            }
            d = 1 / d;
            h *= d * c;
            aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));
            d = 1 + aa * d;
            if (Math.abs(d) < fpmin) {
                d = fpmin;
            }
            c = 1 + aa / c;
            if (Math.abs(c) < fpmin) {
                c = fpmin;
            }
            d = 1 / d;
            del = d * c;
            h *= del;
            if (Math.abs(del - 1.0) < 3e-7) {
                break;
            }
        }
        return h;
    }

    function ibeta(x, a, b) {
        var bt = (x === 0 || x === 1) ? 0 : Math.exp(gammaln(a + b) - gammaln(a) - gammaln(b) + a * Math.log(x) + b * Math.log(1 - x));
        if (x < 0 || x > 1) {
            return false;
        }
        if (x < (a + 1) / (a + b + 2)) {
            return bt * jStat.betacf(x, a, b) / a;
        }
        return 1 - bt * jStat.betacf(1 - x, b, a) / b;
    }

    function cdf(x, dof) {
        var dof2 = dof / 2;
        var x2dof = Math.sqrt(x * x + dof);
        return ibeta((x + x2dof) / (2 * x2dof), dof2, dof2);
    }

    function calculateP(t, n) {
        t = Math.abs(t);
        return cdf(-t, n - 1);
    }

    document.getElementById('fifth-grade-boolean').innerText = (1 - calculateP(calculateT(grade, sampMean, sampStdDev, count), count) < alpha) ? 'YES.' : 'NO.';

</script>
{{/inline}} {{/base}}
